#include <stdio.h>
#include <ctype.h>

char key[5][5] = {
    {'M','F','H','I','K'}, {'U','N','O','P','Q'}, {'Z','V','W','X','Y'},
    {'E','L','A','R','G'}, {'D','S','T','B','C'}
};

void find(char c, int *r, int *c1) {
    if (c == 'J') c = 'I';
    for (int i = 0; i < 5; i++)
        for (int j = 0; j < 5; j++)
            if (key[i][j] == c) {*r = i; *c1 = j; return;}
}

void encryptPair(char a, char b) {
    int r1, c1, r2, c2;
    find(a, &r1, &c1); find(b, &r2, &c2);
    if (r1 == r2) printf("%c%c", key[r1][(c1+1)%5], key[r2][(c2+1)%5]);
    else if (c1 == c2) printf("%c%c", key[(r1+1)%5][c1], key[(r2+1)%5][c2]);
    else printf("%c%c", key[r1][c2], key[r2][c1]);
}

int main() {
    char msg[] = "MUSTSEEYOUOVERCADOGANWEST", cleaned[100], final[110];
    int i, j = 0, k = 0;

    for (i = 0; msg[i]; i++) {
        char c = toupper(msg[i]);
        if (c == 'J') c = 'I';
        if (isalpha(c)) cleaned[j++] = c;
    }

    for (i = 0; i < j; ) {
        char a = cleaned[i], b = (i+1 < j) ? cleaned[i+1] : 'X';
        if (a == b) b = 'X', i++;
        else i += 2;
        final[k++] = a; final[k++] = b;
    }

    if (k % 2) final[k++] = 'X';

    for (i = 0; i < k; i += 2)
        encryptPair(final[i], final[i+1]);

    printf("\n");
    return 0;
}
